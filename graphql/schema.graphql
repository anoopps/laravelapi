"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-01-01 13:00:00`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    team(id: ID! @eq): Team @find
	teams: [Team!] ! @paginate(defaultCount: 2)
    
    site(id: ID! @eq): Site @find
    sites: [Site!] @paginate(defaultCount:3)
    
    address(id: ID! @eq): Address @find
    addresses: [Address!] @paginate(defaultCount: 2)
    
    post(id: ID! @eq): Post @find
    posts: [Post!] @paginate(defaultCount: 3)
    
    patient(id: ID! @eq): Patient @find
    patients: [Patient!] @paginate(defaultCount: 5)
    
    notes: [Note!] @paginate(defaultCount: 5)    
    addrType(addr_id: Int @eq):AddressType @find
}
type Team {
	 id: ID!
	name: String
	status: Boolean
}
type Site {
	id: ID!
	name: String
    status:Int
    partner_sys_id:Int
} 
type User {
    id: ID!
    name: String!
    email: String!   
    posts: [Post!]! @hasMany
}

type Post {
    id: ID!
    title: String!
    content: String!
    author: User! @belongsTo
    comments: [Comment!]! @hasMany
}
type Comment {
    id: ID!
    reply: String!
    post: Post! @belongsTo
}
type Note {
	id: ID!
	patient_id: Int
	category_id: Int
	subject: String
	body: String
	status: Boolean
}
 type Address {
	id: ID!
	addr_id: Int
	patient_id: Int	 
	addresses: String
	city: String
	state: String
	country: String
	zip_code: String
	status: Boolean
}

type AddressType{
    id : Int
    name:String
    status:String
    createdBy:Int
    createdDate:String
    modifiedBy:Int
    modifiedDate:String
}
type Location {
	id: ID!    
	location_name: String
	abbreviation: String
	type: Int
	status: Int
}
type Miscellaneous {
	id: Int
	name: String
	created_by: Int
	created_date: String
	partner_sys_id: Int
}
type DiagnosisDetails {
    patient_id:Int
    diagnosis_id:Int
    status:Int
    created_date:String
    created_by:Int
    diagnosis:Diagnosis! @belongsTo	
}

type Diagnosis{
	id: Int
	name: String
	status: Int
    description: String
}

type AllergyDetails {
	id: Int
    patient_id: Int
    allergy_id: Int
    status: Int      
	allergyDetails: Allergy! @belongsTo
    created_date:String
	status: String
}

type Allergy{
    id:Int
    allergy_name: String
    description: String
    status: Int    
    created_by: Int
    created_date : Date
    partner_sys_id: Int
}

type Patient {
  id:ID!
  firstname:String
  lastname:String
  middlename:String
  dob:String
  precautions:String
  room_number:String  
  next_followup:String
  teach_complete:String
  teach_reason:String  
  hospital_discharge:String
  hospital_discharge_approved:String
  vna:String
  vna_verified:String  
  time_commitment:String  
  lastModifiedDate:Date  
  team:Team! @belongsTo
  site:Site! @belongsTo  
  location:Location! @belongsTo
  miscellaneous:[Miscellaneous!]! @hasMany 
  address:[Address!]! @hasMany 
  notes:[Note!]! @hasMany
  diagnosis:[DiagnosisDetails!]! @hasMany
  allergy:[AllergyDetails!]! @hasMany
  }
  
    
type Mutation{
 createUser(name: String! , email: String!): User! @create
 createSite(name: String! , status: Int!, created_by:Int, partner_sys_id:Int ): Site! @create 
}